{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andersson/Desktop/My JS Works/React Works/Mobile Apps by React-Native/Whack a mole game/my-project/components/Square.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { addScore as _addScore } from \"./../redux\";\nimport { connect } from 'react-redux';\n\nvar Square = function Square(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      moleActive = _useState2[0],\n      setMoleActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isGameOver = _useState4[0],\n      setGameOver = _useState4[1];\n\n  var randomTime = Math.random() * 20000;\n  var timerId;\n  useEffect(function () {\n    timerId = setInterval(function () {\n      setMoleActive(true);\n      setTimeout(function () {\n        setMoleActive(false);\n      }, 800);\n    }, randomTime);\n    setTimeout(endGame, 60 * 1000);\n  }, []);\n\n  function endGame() {\n    clearInterval(timerId);\n    setGameOver(true);\n  }\n\n  return React.createElement(TouchableOpacity, {\n    onPress: moleActive ? props.addScore : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: moleActive ? require(\"../assets/mole.png\") : require(\"../assets/hole.png\"),\n    style: moleActive ? styles.mole : styles.square,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  square: {\n    flex: 1,\n    minWidth: 80,\n    minHeight: 80,\n    margin: 10,\n    backgroundColor: '#9BF89C',\n    width: '100%'\n  },\n  mole: {\n    flex: 1,\n    minWidth: 80,\n    minHeight: 80,\n    margin: 10,\n    backgroundColor: '#9BF89C',\n    width: '100%'\n  },\n  x: {\n    fontWeight: 'bold',\n    fontSize: 650,\n    textAlign: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    score: state.score\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addScore: function addScore() {\n      return dispatch(_addScore());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Square);","map":{"version":3,"sources":["/Users/andersson/Desktop/My JS Works/React Works/Mobile Apps by React-Native/Whack a mole game/my-project/components/Square.js"],"names":["React","useState","useEffect","addScore","connect","Square","props","moleActive","setMoleActive","isGameOver","setGameOver","randomTime","Math","random","timerId","setInterval","setTimeout","endGame","clearInterval","require","styles","mole","square","StyleSheet","create","flex","minWidth","minHeight","margin","backgroundColor","width","x","fontWeight","fontSize","textAlign","mapStateToProps","state","score","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,QAAQ,IAARA,SAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA,kBACcL,QAAQ,CAAC,KAAD,CADtB;AAAA;AAAA,MACfM,UADe;AAAA,MACHC,aADG;;AAAA,mBAEYP,QAAQ,CAAC,KAAD,CAFpB;AAAA;AAAA,MAEfQ,UAFe;AAAA,MAEHC,WAFG;;AAItB,MAAMC,UAAU,GAAGC,IAAI,CAACC,MAAL,KAAgB,KAAnC;AACA,MAAIC,OAAJ;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,OAAO,GAAGC,WAAW,CAAC,YAAM;AACxBP,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAQ,MAAAA,UAAU,CAAC,YAAM;AAACR,QAAAA,aAAa,CAAC,KAAD,CAAb;AAAqB,OAA7B,EAA8B,GAA9B,CAAV;AACH,KAHoB,EAGlBG,UAHkB,CAArB;AAIAK,IAAAA,UAAU,CAACC,OAAD,EAAU,KAAK,IAAf,CAAV;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,WAASA,OAAT,GAAmB;AACfC,IAAAA,aAAa,CAACJ,OAAD,CAAb;AACAJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,SACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEH,UAAU,GAAED,KAAK,CAACH,QAAR,GAAmB,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACA,IAAA,MAAM,EAAEI,UAAU,GAAEY,OAAO,sBAAT,GAAiCA,OAAO,sBAD1D;AAEA,IAAA,KAAK,EAAEZ,UAAU,GAAEa,MAAM,CAACC,IAAT,GAAgBD,MAAM,CAACE,MAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAQH,CA5BD;;AA8BA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,MAAM,EAAE;AACJG,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,SAAS,EAAE,EAHP;AAIJC,IAAAA,MAAM,EAAE,EAJJ;AAKJC,IAAAA,eAAe,EAAE,SALb;AAMJC,IAAAA,KAAK,EAAE;AANH,GADqB;AAS7BT,EAAAA,IAAI,EAAE;AACFI,IAAAA,IAAI,EAAE,CADJ;AAEFC,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,SAAS,EAAE,EAHT;AAIFC,IAAAA,MAAM,EAAE,EAJN;AAKFC,IAAAA,eAAe,EAAE,SALf;AAMFC,IAAAA,KAAK,EAAE;AANL,GATuB;AAiB7BC,EAAAA,CAAC,EAAE;AACCC,IAAAA,UAAU,EAAE,MADb;AAECC,IAAAA,QAAQ,EAAE,GAFX;AAGCC,IAAAA,SAAS,EAAE;AAHZ;AAjB0B,CAAlB,CAAf;;AAwBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACC;AADV,GAAP;AAGH,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHpC,IAAAA,QAAQ,EAAE;AAAA,aAAMoC,QAAQ,CAACpC,SAAQ,EAAT,CAAd;AAAA;AADP,GAAP;AAGH,CAJD;;AAOA,eAAeC,OAAO,CAAC+B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjC,MAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { addScore } from './../redux'\nimport { connect } from 'react-redux'\n\nconst Square = (props) => {\n    const [moleActive, setMoleActive] = useState(false)\n    const [isGameOver, setGameOver] = useState(false)\n\n    const randomTime = Math.random() * 20000\n    let timerId\n\n    useEffect(() => {\n        timerId = setInterval(() => {\n            setMoleActive(true)\n            setTimeout(() => {setMoleActive(false)},800)\n        }, randomTime)\n        setTimeout(endGame, 60 * 1000)\n    }, [])\n\n    function endGame() {\n        clearInterval(timerId)\n        setGameOver(true)\n    }\n\n    return (\n        <TouchableOpacity onPress={moleActive? props.addScore : null}>\n            <Image \n            source={moleActive? require('../assets/mole.png'): require('../assets/hole.png')} \n            style={moleActive? styles.mole : styles.square}>\n            </Image>\n        </TouchableOpacity>\n    )\n}\n\nconst styles = StyleSheet.create({\n    square: {\n        flex: 1,\n        minWidth: 80,\n        minHeight: 80,\n        margin: 10,\n        backgroundColor: '#9BF89C',\n        width: '100%'\n    },\n    mole: {\n        flex: 1,\n        minWidth: 80,\n        minHeight: 80,\n        margin: 10,\n        backgroundColor: '#9BF89C', \n        width: '100%'\n    },\n    x: {\n        fontWeight: 'bold',\n        fontSize: 650,\n        textAlign: 'center',\n    }\n})\n\nconst mapStateToProps = state => {\n    return {\n        score: state.score\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addScore: () => dispatch(addScore())\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Square)"]},"metadata":{},"sourceType":"module"}