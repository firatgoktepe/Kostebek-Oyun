{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/andersson/Desktop/My JS Works/React Works/Mobile Apps by React-Native/Whack a mole game/my-project/App.js\";\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport GameBoard from \"./components/GameBoard\";\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, timeout);\n  });\n};\n\nexport default function App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  return React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Pull down to see RefreshControl indicator\"))), React.createElement(GameBoard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/andersson/Desktop/My JS Works/React Works/Mobile Apps by React-Native/Whack a mole game/my-project/App.js"],"names":["React","GameBoard","Provider","store","wait","timeout","Promise","resolve","setTimeout","App","useState","refreshing","setRefreshing","onRefresh","useCallback","then"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAOA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAa;AACxB,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BC,IAAAA,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAV;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,eAAe,SAASI,GAAT,GAAe;AAAA,wBAEQT,KAAK,CAACU,QAAN,CAAe,KAAf,CAFR;AAAA;AAAA,MAErBC,UAFqB;AAAA,MAETC,aAFS;;AAI5B,MAAMC,SAAS,GAAGb,KAAK,CAACc,WAAN,CAAkB,YAAM;AACxCF,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEAR,IAAAA,IAAI,CAAC,IAAD,CAAJ,CAAWW,IAAX,CAAgB;AAAA,aAAMH,aAAa,CAAC,KAAD,CAAnB;AAAA,KAAhB;AACD,GAJiB,EAIf,EAJe,CAAlB;AAOA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,UAAD;AACE,IAAA,cAAc,EACZ,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAEQ,UAA5B;AAAwC,MAAA,SAAS,EAAEE,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDALF,CADM,CADR,EAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAcD","sourcesContent":["import React from 'react';\nimport {\n  ScrollView,\n  RefreshControl,\n  Text,\n  SafeAreaView,\n} from 'react-native';\nimport GameBoard from './components/GameBoard'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nconst wait = (timeout) => {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n\nexport default function App() {\n\n  const [refreshing, setRefreshing] = React.useState(false);\n\n  const onRefresh = React.useCallback(() => {\n    setRefreshing(true);\n\n    wait(2000).then(() => setRefreshing(false));\n  }, []);\n\n\n  return (\n    <Provider store={store}>\n            <SafeAreaView>\n      <ScrollView\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        <Text>Pull down to see RefreshControl indicator</Text>\n      </ScrollView>\n    </SafeAreaView>\n      <GameBoard/>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}