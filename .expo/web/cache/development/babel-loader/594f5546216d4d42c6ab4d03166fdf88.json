{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_SCORE } from \"./actionTypes\";\nvar initialState = {\n  score: 0\n};\n\nvar scoreReducer = function scoreReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_SCORE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        score: state.score + 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default scoreReducer;","map":{"version":3,"sources":["/Users/andersson/Desktop/My JS Works/React Works/Mobile Apps by React-Native/Whack a mole game/my-project/redux/reducer.js"],"names":["ADD_SCORE","initialState","score","scoreReducer","state","action","type"],"mappings":";;;;;;AAAA,SAASA,SAAT;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,SAAL;AAAgB,6CACTI,KADS;AAEZF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAFT;;AAIhB;AAAS,aAAOE,KAAP;AALb;AAOH,CARD;;AAUA,eAAeD,YAAf","sourcesContent":["import { ADD_SCORE } from './actionTypes'\nconst initialState = {\n    score: 0\n}\n\nconst scoreReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_SCORE: return {\n            ...state,\n            score: state.score + 1\n        }\n        default: return state\n    }\n}\n\nexport default scoreReducer"]},"metadata":{},"sourceType":"module"}